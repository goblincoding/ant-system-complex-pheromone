<Window x:Class="AntSimComplexUI.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
        xmlns:utilities="clr-namespace:AntSimComplexUI.Utilities"
        mc:Ignorable="d"
        Title="MainWindow"
        MinHeight="700" MinWidth="960"
        WindowStartupLocation="CenterScreen"
        Loaded="WindowLoaded"
        SizeChanged="WindowSizeChanged">

    <xctk:BusyIndicator Name="BusyIndicator" IsBusy="False" BusyContent="Executing...">
        <Grid x:Name="PrimaryGrid">

            <!-- Set up primary grid. -->
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="3*" MinWidth="500" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>

            <Grid.RowDefinitions>
                <RowDefinition MinHeight="500" />
            </Grid.RowDefinitions>

            <!-- Set up styles. -->
            <Grid.Resources>
                <Style TargetType="Border">
                    <Setter Property="BorderBrush" Value="DarkGray" />
                    <Setter Property="BorderThickness" Value="1" />
                    <Setter Property="Margin" Value="5,5,5,5" />
                    <Setter Property="CornerRadius" Value="3" />
                </Style>
                <Style TargetType="ComboBox">
                    <Setter Property="VerticalAlignment" Value="Center" />
                    <Setter Property="HorizontalAlignment" Value="Stretch" />
                    <Setter Property="SelectedIndex" Value="0" />
                    <Setter Property="Margin" Value="5, 5, 5, 5" />
                </Style>
                <Style TargetType="CheckBox">
                    <Setter Property="VerticalAlignment" Value="Center" />
                    <Setter Property="HorizontalAlignment" Value="Center" />
                    <Setter Property="Margin" Value="5, 5, 5, 5" />
                </Style>
                <Style TargetType="Button">
                    <Setter Property="VerticalAlignment" Value="Center" />
                    <Setter Property="HorizontalAlignment" Value="Stretch" />
                    <Setter Property="Margin" Value="5, 5, 5, 5" />
                </Style>
                <Style TargetType="RadioButton">
                    <Setter Property="VerticalAlignment" Value="Center" />
                    <Setter Property="Margin" Value="5, 5, 5, 5" />
                </Style>
                <Style TargetType="xctk:IntegerUpDown">
                    <Setter Property="VerticalAlignment" Value="Center" />
                    <Setter Property="Margin" Value="5, 5, 5, 5" />
                </Style>
                <Style TargetType="xctk:DoubleUpDown">
                    <Setter Property="VerticalAlignment" Value="Center" />
                    <Setter Property="Margin" Value="5, 5, 5, 5" />
                </Style>
            </Grid.Resources>

            <!-- Set up tool grid. -->
            <Border Grid.Column="0" Grid.RowSpan="1">
                <Grid x:Name="ToolsGrid">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>

                    <Border Grid.Row="0">
                        <Grid x:Name="SelectionGrid">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <Label Content="Select Symmetric TSP Problem:" Grid.Row="0" HorizontalAlignment="Left" />
                            <ComboBox Name="TspCombo" Grid.Row="1" SelectionChanged="TspComboSelectionChanged" />
                            <CheckBox Name="ShowOptimal"
                                      Content="Show Optimal Tour (if available)"
                                      Grid.Row="2"
                                      Checked="ShowOptimalChecked"
                                      Unchecked="ShowOptimalUnchecked" />
                        </Grid>
                    </Border>

                    <Border Grid.Row="1">
                        <Grid x:Name="OptionsGrid">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" MinWidth="70" />
                            </Grid.ColumnDefinitions>

                            <Label Content="Select Execution Options:" Grid.Row="0" HorizontalAlignment="Left" />
                            <RadioButton Name="RunCount"
                                         GroupName="ExecuteRadioButtons"
                                         Content="Run x times:"
                                         Grid.Column="0"
                                         Grid.Row="1"
                                         HorizontalAlignment="Left"
                                         IsChecked="True" />
                            <xctk:IntegerUpDown Name="RunCountInt"
                                                Value="10" Minimum="1"
                                                Grid.Column="1"
                                                Grid.Row="1" />

                            <RadioButton Name="RunTime"
                                         GroupName="ExecuteRadioButtons"
                                         Content="Run for x seconds:"
                                         Grid.Column="0"
                                         Grid.Row="2"
                                         HorizontalAlignment="Left" />
                            <xctk:IntegerUpDown Name="RunTimeInt"
                                                Value="10" Minimum="1"
                                                Grid.Column="1"
                                                Grid.Row="2" />
                        </Grid>
                    </Border>

                    <Border Grid.Row="2">
                        <Grid x:Name="ParametersGrid">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" MinWidth="70" />
                            </Grid.ColumnDefinitions>

                            <Label Content="Select Parameters:" Grid.Row="0" HorizontalAlignment="Left" />
                            <Label Content="Alpha" Grid.Column="0" Grid.Row="1" HorizontalAlignment="Left" />
                            <xctk:IntegerUpDown Name="AlphaInt" Value="1" Minimum="1" Maximum="5" Grid.Column="1" Grid.Row="1"
                                                ValueChanged="AlphaIntValueChanged"
                                                AllowTextInput="False" />

                            <Label Content="Beta" Grid.Column="0" Grid.Row="2" HorizontalAlignment="Left" />
                            <xctk:IntegerUpDown Name="BetaInt" Value="1" Minimum="1" Maximum="5" Grid.Column="1" Grid.Row="2"
                                                ValueChanged="BetaIntValueChanged"
                                                AllowTextInput="False" />

                            <Label Content="Evaporation Rate" Grid.Column="0" Grid.Row="3" HorizontalAlignment="Left" />
                            <xctk:DoubleUpDown Name="EvapDouble" Value="0.5" Minimum="0.0" Maximum="1.0" Increment="0.1"
                                               Grid.Column="1" Grid.Row="3"
                                               ValueChanged="EvapDoubleValueChanged"
                                               AllowTextInput="False" />
                        </Grid>
                    </Border>

                    <Button x:Name="ExecuteButton" Content="Execute"
                            Grid.Row="3" Grid.Column="0"
                            Click="ExecuteButtonClick" />
                </Grid>
            </Border>

            <!-- Set up canvas. -->
            <Border Grid.Column="1" Grid.Row="0">
                <Canvas Name="Canvas" Background="LightGray" />
            </Border>

            <!-- Set up tour display. -->
            <Border Grid.Column="2" Grid.Row="0">
                <ListView Name="TourListView"
                      SelectionChanged="TourListViewSelectionChanged">
                    <ListView.ItemTemplate>
                        <DataTemplate DataType="utilities:ListViewTourItem">
                            <StackPanel>
                                <WrapPanel>
                                    <TextBlock Text="Tour Info: " />
                                    <TextBlock Text="{Binding TourInfo}" FontWeight="Bold" />
                                </WrapPanel>
                                <WrapPanel>
                                    <TextBlock Text="Tour Length: " />
                                    <TextBlock Text="{Binding Length}" FontWeight="Bold" />
                                </WrapPanel>
                                <WrapPanel>
                                    <TextBlock Text="Node Sequence: " />
                                    <TextBlock Text="{Binding NodeSequence}" />
                                </WrapPanel>
                            </StackPanel>
                        </DataTemplate>
                    </ListView.ItemTemplate>
                </ListView>
            </Border>
        </Grid>
    </xctk:BusyIndicator>
</Window>